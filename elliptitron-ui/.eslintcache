[{"D:\\wes\\repos\\github\\elliptitron\\elliptitron-ui\\src\\index.js":"1","D:\\wes\\repos\\github\\elliptitron\\elliptitron-ui\\src\\reportWebVitals.js":"2","D:\\wes\\repos\\github\\elliptitron\\elliptitron-ui\\src\\App.js":"3","D:\\wes\\repos\\github\\elliptitron\\elliptitron-ui\\src\\Proto.js":"4"},{"size":505,"mtime":1608941404959,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1608935103627,"results":"7","hashOfConfig":"6"},{"size":528,"mtime":1608935103623,"results":"8","hashOfConfig":"6"},{"size":3635,"mtime":1608968184806,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"vrk54s",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"D:\\wes\\repos\\github\\elliptitron\\elliptitron-ui\\src\\index.js",[],["21","22"],"D:\\wes\\repos\\github\\elliptitron\\elliptitron-ui\\src\\reportWebVitals.js",[],"D:\\wes\\repos\\github\\elliptitron\\elliptitron-ui\\src\\App.js",[],["23","24"],"D:\\wes\\repos\\github\\elliptitron\\elliptitron-ui\\src\\Proto.js",["25","26","27","28","29"],"import '../node_modules/material-icons/css/material-icons.css'\r\nimport './css/proto.css'\r\nimport React, { useState, ReactDOM, useEffect } from 'react';\r\nimport {AccessAlarm, Fullscreen} from '@material-ui/icons'\r\n//var jQuery = require('jquery');\r\n\r\n\r\n\r\n// var electron = require('electron');\r\n// var window = electron.remote.getCurrentWindow();\r\n// window.setFullScreen(true);\r\n\r\nfunction Buttons() {\r\n\r\n    document.querySelector('#btnrefresh').addEventListener('click', () => {\r\n        // var win = BrowserWindow.getFocusedWindow();\r\n        // console.log(win);\r\n    })\r\n}\r\n\r\nfunction Meter(canvas) {\r\n\r\n    var canvas = document.getElementById(canvas);\r\n    var ctx = canvas.getContext('2d');\r\n    ctx.strokeStyle = '#28d1fa';\r\n\r\n    ctx.lineCap = 'round';\r\n    ctx.shadowBlur = 15;\r\n    ctx.shadowColor = '#28d1fa';\r\n\r\n    // Background\r\n    var gradient = ctx.createRadialGradient(400, 400, 5, 400, 400, 300);\r\n    gradient.addColorStop(0, '#09303a');\r\n    gradient.addColorStop(1, '#000000');\r\n    ctx.fillStyle = gradient;\r\n    ctx.fillRect(0, 0, 800, 800);\r\n\r\n    var to = 140 + ((350 - 140) * .75);\r\n    var from = 140;\r\n\r\n    if (to > 350) {\r\n        to = 350;\r\n    }\r\n\r\n    if (from < 140) {\r\n        from = 140;\r\n    }\r\n\r\n    ctx.lineWidth = 2;\r\n    ctx.beginPath();\r\n    ctx.arc(400, 400, 360, degToRad(from), degToRad(400));\r\n    ctx.stroke();\r\n\r\n    //speed goes here\r\n    // ctx.font = \"100px Helvetica\";\r\n    // ctx.fillStyle = '#28d1fa';\r\n    // ctx.fillText(val, 200, 220);\r\n\r\n    //label goes here\r\n    // ctx.font = \"15px Helvetica\";\r\n    // ctx.fillStyle = '#28d1fa';\r\n    // ctx.fillText(label, 75, 250);\r\n    return this;\r\n}\r\n\r\nfunction Proto() {\r\n    const [stats, setStats] = useState({\"TotalElapsedTime\": 50.7156662940979, \"distance\": 0.003472222222222222, \"calories\": 8.191355562210083, \"mph\": 0.31, \"totalCountOnState\": 10.0, \"caloriesPerMinute\": 0.0});\r\n    const getStats = () => {\r\n        fetch(\"http://192.168.1.85:9001/state\")\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              console.log(result);\r\n              setStats(result)          \r\n            },\r\n            // Note: it's important to handle errors here\r\n            // instead of a catch() block so that we don't swallow\r\n            // exceptions from actual bugs in components.\r\n            (error) => {\r\n              console.error(error, \"error\");\r\n            }\r\n          )\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            getStats();\r\n          }, 1000);\r\n          return () => clearInterval(interval);\r\n\r\n        Meter(\"calsPerMinute\");\r\n        Meter(\"speed\");\r\n      }, []);\r\n\r\n    return (\r\n        <div className=\"flex-container\">\r\n            <div className=\"menu flex-item\">\r\n                <AccessAlarm />\r\n                <Fullscreen />\r\n            </div>\r\n            <div className=\"flex-item\">\r\n                <div className=\"extlabel\">{stats.caloriesPerMinute}</div>\r\n                <div className=\"inddescrip\">Calories/Minute</div>\r\n                <canvas id=\"calsPerMinute\" width=\"800\" height=\"800\" className=\"gauge\"></canvas>\r\n            </div>\r\n            <div className=\"flex-item\">\r\n                <div id=\"SpeedMetricLabel\" className=\"extlabel\">{stats.mph}</div>\r\n                <div className=\"inddescrip\">MPH</div>\r\n                <canvas id=\"speed\" width=\"800\" height=\"800\" className=\"gauge\"></canvas>\r\n            </div>\r\n        </div>\r\n    );  \r\n}\r\n\r\nfunction degToRad(degree) {\r\n    var factor = Math.PI / 180;\r\n    return degree * factor;\r\n}\r\n\r\n\r\n\r\nfunction getd() {\r\n\r\n  }\r\n\r\nexport default Proto;\r\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"30","replacedBy":"34"},{"ruleId":"32","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":3,"column":27,"nodeType":"38","messageId":"39","endLine":3,"endColumn":35},{"ruleId":"36","severity":1,"message":"40","line":13,"column":10,"nodeType":"38","messageId":"39","endLine":13,"endColumn":17},{"ruleId":"41","severity":1,"message":"42","line":23,"column":9,"nodeType":"38","messageId":"43","endLine":23,"endColumn":15},{"ruleId":"44","severity":1,"message":"45","line":91,"column":9,"nodeType":"46","messageId":"47","endLine":92,"endColumn":24},{"ruleId":"36","severity":1,"message":"48","line":122,"column":10,"nodeType":"38","messageId":"39","endLine":122,"endColumn":14},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],["49"],["50"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Buttons' is defined but never used.","no-redeclare","'canvas' is already defined.","redeclared","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'getd' is defined but never used.","no-global-assign","no-unsafe-negation"]